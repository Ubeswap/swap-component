/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "partnerId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "initiator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bool",
                name: "isAdminFee",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "oldFee",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newFee",
                type: "uint256",
            },
        ],
        name: "FeeChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "input",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "output",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "inputAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "outputAmount",
                type: "uint256",
            },
        ],
        name: "Swap",
        type: "event",
    },
    {
        inputs: [],
        name: "FEE_DENOMINATOR",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "defaultAdminFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
            {
                internalType: "bool",
                name: "isAdmin",
                type: "bool",
            },
        ],
        name: "setAdmin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "partnerId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "admin",
                type: "address",
            },
        ],
        name: "setPartnerAdmin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "partnerId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "feeNumerator",
                type: "uint256",
            },
        ],
        name: "setPartnerFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "partnerId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "feeNumerator",
                type: "uint256",
            },
        ],
        name: "setAdminFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "path",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "pairs",
                type: "address[]",
            },
            {
                internalType: "bytes[]",
                name: "extras",
                type: "bytes[]",
            },
            {
                internalType: "uint256",
                name: "inputAmount",
                type: "uint256",
            },
        ],
        name: "getOutputAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "outputAmount",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address[]",
                        name: "path",
                        type: "address[]",
                    },
                    {
                        internalType: "address[]",
                        name: "pairs",
                        type: "address[]",
                    },
                    {
                        internalType: "bytes[]",
                        name: "extras",
                        type: "bytes[]",
                    },
                    {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minOutputAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expectedOutputAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "partner",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "sig",
                        type: "bytes",
                    },
                ],
                internalType: "struct ISwappaRouterV1.SwapPayload",
                name: "details",
                type: "tuple",
            },
        ],
        name: "swapExactInputForOutput",
        outputs: [
            {
                internalType: "uint256",
                name: "outputAmount",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
export class MinimaRouter__factory {
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
MinimaRouter__factory.abi = _abi;
