"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FarmRegistry__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "stakingAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tvlUSD",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "rewardsUSDPerYear",
                type: "uint256",
            },
        ],
        name: "FarmData",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "stakingAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "farmName",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "lpAddress",
                type: "address",
            },
        ],
        name: "FarmInfo",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "lpAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "token0Address",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "token1Address",
                type: "address",
            },
        ],
        name: "LPInfo",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "farmName",
                type: "bytes32",
            },
            {
                internalType: "contract IFarm",
                name: "farm",
                type: "address",
            },
        ],
        name: "addFarmInfo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "farm",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tvlUSD",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "rewardsUSDPerYear",
                type: "uint256",
            },
        ],
        name: "updateFarmData",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class FarmRegistry__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FarmRegistry__factory = FarmRegistry__factory;
FarmRegistry__factory.abi = _abi;
